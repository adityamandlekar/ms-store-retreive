node {
    def mvnHome
    stage('Preparation') { // for display purposes
        // Get some code from a GitHub repository
        git 'https://github.com/akash1233/ms-store-retreive.git'
        // Get the Maven tool.
        // ** NOTE: This 'M3' Maven tool must be configured
        // **       in the global configuration.
        mvnHome = tool 'M3'
    }
    stage('Clean') {
        // Run the maven build
        if (isUnix()) {
            sh "'${mvnHome}/bin/mvn' clean "
        } else {
            bat(/"${mvnHome}\bin\mvn" clean /)
        }
    }

    stage('Build') {
        // Run the maven build
        if (isUnix()) {
            sh "'${mvnHome}/bin/mvn' compile "
        } else {
            bat(/"${mvnHome}\bin\mvn" compile /)
        }
    }
    stage('quality checks') {
        parallel(
                "unit-test": {
                    sh "'${mvnHome}/bin/mvn' test"
                },
                "sonar-scan": {
                    sh "'${mvnHome}/bin/mvn' sonar:sonar -Dsonar.host.url=http://ec2-34-212-9-250.us-west-2.compute.amazonaws.com:9000 -Dsonar.login=12d340f32636babddb5f2488ecb7a4a71c6168f7"
                },

                "fortify-scan_TBD": {
                    echo "tbd"
                }


        )
    }

    stage('package') {
        // Package the application
        if (isUnix()) {
            sh "'${mvnHome}/bin/mvn' package"
        } else {
            bat(/"${mvnHome}\bin\mvn" package/)
        }
    }

    stage('Deploy-Dev-heroku-and-CF_TBD') {
        //Deploy through Heroku and CF
        sh "apt-get install cf-cli"
    }

    stage('Functional-Tests_TBD') {
        //Deploy through Heroku and CF
        echo "TBD"
    }

    stage('Merge_Dev->Master_TBD') {
        //Deploy through Heroku and CF
        echo "TBD"
    }


}


